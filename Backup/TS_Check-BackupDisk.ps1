<#
.SYNOPSIS
script was used to help automate a process where we had different removeable storage devices plugged into
the backup server depending on the day of the week to create an additional offsite backup.
It was designed to run via task scheduler and will send an email before the end of the day
if the correct backup disk wasn't plugged in by the time it runs.
.DESCRIPTION
This script will will email advising the disk is incorrect.
#>
# Gets the day of the week to us in the Where-object below
$DayofWeek = (Get-Date).dayofweek
# will target the Backup Disk by name and Drive letter
$BackupDisk = Get-WmiObject -Class win32_volume |
Where-Object { $_.Label -like "$DayofWeek*" -and $_.DriveLetter -eq "E:" }

if (!$BackupDisk) {
    $IncorrectBackupDisk = Get-WmiObject -Class win32_volume |
    Where-Object {
        # These are other known drive letters on the server so I excluded them from the check so it
        # could pull any disks that may be plugged in but not what the backup script will expect
        $_.DriveLetter -ne "C:" -and
        $_.DriveLetter -ne "D:" -and
        $_.DriveLetter -ne "F:" -and
        $_.DriveLetter -ne "Y:" -and
        $_.DriveLetter -ne $null
    } |
    Select-Object DriveLetter, Label, FreeSpace, Capacity
    $IncorrectBackupDiskEmail = "$IncorrectBackupDisk"
    $IncorrectBackupDiskEmail = $IncorrectBackupDiskEmail.Replace("@{", "")
    $IncorrectBackupDiskEmail = $IncorrectBackupDiskEmail.Replace("}", "")
    $IncorrectBackupDiskEmail = $IncorrectBackupDiskEmail.Replace(" ", "")
    $EmailBodyTemplate =
    @"
<html>
<head>
<style type="text/css">
table,td,tr { border: 0px; vertical-align: top; font-size: 12pt; }
.highlight {color: red}
table { width: 33% }
.box { border-width: 2px; border-style: solid; width: 50%; margin-left: 150px; margin-right: 150px; padding: 10px 10px 10px 10px  }
<style>
</head>
<body>
<p>
Did not find correct backup disk attached to APOLLO for $DayofWeek <br />
Reminder to connect correct backup drive for $DayofWeek before you leave for the day.
</p>
<p>
Expected Disk:                   <br />
Label           = _DayofWeek_*  <br />
Drive Letter    = E:            <br />
</p>
<p>
----------------------------------------
</p>
<p>
Disk Found:                                         <br />
Label           = _IncorrectBackupDiskDriveLabel_   <br />
Drive Letter    = _IncorrectBackupDiskDriveLetter_  <br />
</p>
<p>
This email is generated by Scheduled Task running on Apollo
</p>
</body>
</html>
"@

    $EmailBody = $EmailBodyTemplate.Replace("_DayofWeek_", $DayofWeek)
    $EmailBody = $EmailBody.Replace("_IncorrectBackupDiskDriveLetter_", $IncorrectBackupDisk.DriveLetter)
    $EmailBody = $EmailBody.Replace("_IncorrectBackupDiskDriveLabel_", $IncorrectBackupDisk.Label)
    $MailSplat = @{
        SmtpServer = "smtpserver.domain.com"
        Subject    = "[ServerName] Incorrect Backup Disk - $DayofWeek not found"
        Body       = $EmailBody
        From       = "Backup@domain.com"
        To         = "Email1@domain.com", "Email2@domain.com"
        BodyAsHtml = $true
    }
    Send-MailMessage @MailSplat
}
